name: Release RTSan binaries

on:
  push:
    branches: [ "feature/release-action" ]

jobs:
  linux:
    strategy:
      matrix:
          machine: [ubuntu-24.04, ubuntu-24.04-arm]
    runs-on: ${{ matrix.machine }}
    name: Ubuntu 24.04
    steps:
    - name: Download sources
      uses: llvm/actions/get-llvm-project-src@main
      with:
        repo: "llvm/llvm-project"
        ref: "llvmorg-20.1.0"
    - name: Build and Test
      uses: llvm/actions/build-test-llvm-project@main
      with:
        cmake_args: "-G Ninja -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS=\"clang;compiler-rt\" -DLLVM_TARGETS_TO_BUILD=Native"
        build_target: "rtsan"
    - name: Find binary
      run: find /home/runner/work/RTSanStandaloneSwift/RTSanStandaloneSwift/ -name "libclang_rt.rtsan.a"
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: "libclang_rt.rtsan-${{ matrix.machine }}.a"
        path: "/home/runner/work/RTSanStandaloneSwift/RTSanStandaloneSwift/build/lib/clang/20/lib/**/libclang_rt.rtsan.a"
  macos:
    runs-on: macos-15
    name: macOS
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: 'true'
    - name: Download sources
      uses: llvm/actions/get-llvm-project-src@main
      with:
        repo: "llvm/llvm-project"
        ref: "llvmorg-20.1.0"
    - name: Install Ninja
      uses: llvm/actions/install-ninja@main
    - name: Build and Test
      uses: llvm/actions/build-test-llvm-project@main
      with:
        cmake_args: "-G Ninja -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS=\"clang;compiler-rt\" -DLLVM_TARGETS_TO_BUILD=Native -DCOMPILER_RT_ENABLE_MACCATALYST=OFF"
        build_target: "rtsan"
    - name: Create xcframework
      run: xcrun xcodebuild -create-xcframework -library build/lib/clang/20/lib/darwin/libclang_rt.rtsan_osx_dynamic.dylib -headers Binary/include -library build/lib/clang/20/lib/darwin/libclang_rt.rtsan_iossim_dynamic.dylib -headers Binary/include -library build/lib/clang/20/lib/darwin/libclang_rt.rtsan_ios_dynamic.dylib -headers Binary/include -output rtsan.xcframework
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: "rtsan.xcframework"
        path: "/Users/runner/work/RTSanStandaloneSwift/RTSanStandaloneSwift/rtsan.xcframework"

